<?php

define('LANGUAGE_NEGOTIATION_SELECTION_PAGE', 'language-selection-page');

/**
 * Implements hook_menu().
 */
function i18n_selection_page_menu() {
  $items = array();

  $items['admin/config/regional/language/configure/selection_page'] = array(
    'title' => 'Language selection page',
    'description' => 'Configure the language selection page behavior',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('i18n_selection_page_admin'),
    'access arguments' => array('administer languages'),
    'file' => 'i18n_selection_page.admin.inc',
    'type' => MENU_VISIBLE_IN_BREADCRUMB
  );

  $items['language_selection'] = array(
    'description' => 'Language selection page',
    'page callback' => 'i18n_selection_page_selection_page',
    'access arguments' => array('access content'),
    'file' => 'i18n_selection_page.pages.inc',
    'type' => MENU_NORMAL_ITEM
  );

  return $items;
}

/**
 * Implementation of hook_language_negotiation_info().
 *
 * @return void
 */
function i18n_selection_page_language_negotiation_info() {
  $language_providers[LANGUAGE_NEGOTIATION_SELECTION_PAGE] = array(
    'types' => array(LANGUAGE_TYPE_CONTENT, LANGUAGE_TYPE_INTERFACE, LANGUAGE_TYPE_URL),
    'callbacks' => array(
      'language' => 'i18n_selection_page_language',
      'switcher' => 'locale_language_switcher_url',
      'url_rewrite' => 'locale_language_url_rewrite_url'
    ),
    'file' => drupal_get_path('module', 'i18n_selection_page') . '/i18n_selection_page.module',
    'weight' => 50,
    'name' => t('Selection Page'),
    'description' => t('Use a Selection Page to the visitor to choose it\'s language.'),
    'config' => 'admin/config/regional/language/configure/selection_page'
  );
  return $language_providers;
}

function i18n_selection_page_language($languages) {
  require_once('./includes/locale.inc');
  require_once('./includes/path.inc');
  require_once('./includes/common.inc');

  $lang = locale_language_from_url($languages);
  $error = FALSE;

  if ($lang) return $lang;

  if ($_GET['q'] == 'language_selection') $error = TRUE;
  if (!isset($_SERVER['SERVER_ADDR'])) $error = TRUE;

  if ($error) return;

  $query = drupal_get_query_parameters();
  $query['destination'] = $_GET['q'];

  $behavior = variable_get('i18n_selection_page_enable', 2);
  $destination = NULL;
  $query = drupal_get_query_parameters();
  $query['destination'] = $_GET['q'] ? $_GET['q'] : 'node';
  $language = $GLOBALS['language'];

  debug($behavior);

  switch ($behavior) {
    case 2:
      $destination = NULL;
      break;
    case 1:
      $destination = $_GET['q'];
      if ($language->provider == LANGUAGE_NEGOTIATION_COOKIE) {
        unset($query['destination']);
        break;
      }
    case 4:
      $destination = 'language_selection';
      //$language = LANGUAGE_NONE;
      break;
  }

  if ($destination) {
    //$url = url($destination, array('query' => $query, 'absolute' => FALSE, 'language' => $language));
    //drupal_set_message("Redirect to $url", 'warning');
    drupal_goto($destination, array('query' => $query, 'absolute' => FALSE, 'language' => LANGUAGE_NONE));
  }
}

/**
 * Implements hook_init().
 */
function i18n_selection_page_init() {

  //dpm($GLOBALS);

  /*
  require_once('./includes/language.inc');
  module_load_include('inc', 'i18n_selection_page', 'includes/i18n_selection_page.helpers');

  $weights = variable_get('locale_language_providers_weight_language', array());
  $error = FALSE;
  $language = $GLOBALS['language'];

  // Some checks
  $languages = language_list('enabled');
  $languages = $languages[1];

  $lang_from_url = _i18n_detect_lang_from_url($languages);

  if (!language_negotiation_get_any(LANGUAGE_NEGOTIATION_SELECTION_PAGE)) $error = TRUE;
  //if ($weights[LANGUAGE_NEGOTIATION_SELECTION_PAGE] > $weights[LOCALE_LANGUAGE_NEGOTIATION_URL]) $error = TRUE;
  //if ($weights[LANGUAGE_NEGOTIATION_SELECTION_PAGE] > $weights[LANGUAGE_NEGOTIATION_DEFAULT]) $error = TRUE;
  if ($lang_from_url) $error = TRUE;
  if ($_GET['q'] == 'language_selection') $error = TRUE;
  if (!isset($_SERVER['SERVER_ADDR'])) $error = TRUE;
  //if (!isset($language->provider) || $language->provider != LOCALE_LANGUAGE_NEGOTIATION_URL_FALLBACK) $error = TRUE;

  if ($error) return;

  $behavior = variable_get('i18n_selection_page_enable', 2);
  $destination = NULL;
  $query = drupal_get_query_parameters();
  $query['destination'] = $_GET['q'];

  //dpm($language);

  switch ($behavior) {
    case 2:
      $destination = NULL;
      break;
    case 1:
      $destination = $_GET['q'];
      if ($language->provider == LANGUAGE_NEGOTIATION_COOKIE) {
        unset($query['destination']);
        break;
      }
    case 4:
      $destination = 'language_selection';
      $language = LANGUAGE_NONE;
      break;
  }

  if ($destination) {
    //$url = url($destination, array('query' => $query, 'absolute' => FALSE, 'language' => $language));
    //drupal_set_message("Redirect to $url", 'warning');
    drupal_goto($destination, array('query' => $query, 'absolute' => FALSE, 'language' => $language));
  }
*/
}

/**
 * Implements hook_theme().
 */
function i18n_selection_page_theme() {
  return array(
    'i18n_selection_page' => array(
      'arguments' => array('data' => array()),
      'path' => drupal_get_path('module', 'i18n_selection_page') . '/themes',
      //'file' => '/i18n_selection_page.pages.inc',
      'template' => 'i18n_selection_page'
    ),
    'i18n_selection_page_body' => array(
      'arguments' => array('data' => array()),
      'path' => drupal_get_path('module', 'i18n_selection_page') . '/themes',
      //'file' => 'i18n_selection_page.pages.inc',
      'template' => 'i18n_selection_page_body'
    )
  );
}